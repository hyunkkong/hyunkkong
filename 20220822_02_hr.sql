SELECT USER
FROM DUAL;
--==>> HR


--○ 세 개 이상의 테이블 조인(JOIN)

-- 형식 1. (SQL 1992 CODE)
SELECT 테이블명1.컬럼명, 테이블명2.컬럼명, 테이블명3.컬럼명
FROM 테이블명1, 테이블명2, 테이블명3
WHERE 테이블명1.컬럼명1 = 테이블명2.컬럼명1
  AND 테이블명2.컬럼명2 = 테이블명3.컬럼명2; 

-- 형식 2. (SQL 1999 CODE)

SELECT 테이블명1.컬럼명, 테이블명2.컬럼명, 테이블명3.컬럼명
FROM 테이블명1 JOIN 테이블명2 
ON 테이블명1.컬럼명1 = 테이블명2.컬럼명1
        JOIN 테이블명3
        ON 테이블명2.컬럼명2 = 테이블명3.컬럼명2; 

--○ HR 계정 소유의 테이블 또는 뷰 목록 조회
SELECT *
FROM TAB;
--==>>
/*
COUNTRIES	        TABLE	
DEPARTMENTS	        TABLE	
EMPLOYEES	        TABLE	
EMP_DETAILS_VIEW	VIEW	
JOBS	            TABLE	
JOB_HISTORY	        TABLE	
LOCATIONS	        TABLE	
REGIONS	            TABLE	
*/


--○ HR.JOBS, HR.EMPLOYEES, HR.DEPARTMENTS 테이블을 대상으로
--   직원들의 데이터를
--   FIRST_NAME, LAST_NAME, JOB_TITLE, DEPARTMENT_NAME 항목으로 조회한다.
--   ---------- ----------- ---------- ----------------
--   EMPLOYEES   EMPLOYEES  JOBS       DEPARTMENTS
SELECT E.FIRST_NAME, E.LAST_NAME,J.JOB_TITLE,D.DEPARTMENT_NAME
FROM JOBS J, EMPLOYEES E, DEPARTMENTS D
WHERE J.JOB_ID = E.JOB_ID
  AND E.DEPARTMENT_ID = D.DEPARTMENT_ID(+);

SELECT E.FIRST_NAME, E.LAST_NAME,J.JOB_TITLE,D.DEPARTMENT_NAME
FROM JOBS J JOIN EMPLOYEES E
ON J.JOB_ID = E.JOB_ID
    LEFT JOIN DEPARTMENTS D
    ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;


SELECT *
FROM JOBS;
-- JOB_ID           -- 관계 컬럼
SELECT  *
FROM HR.EMPLOYEES;
-- DEPARTMENT_ID    -- 관계 컬럼
SELECT  *
FROM HR.DEPARTMENTS;





SELECT E.FIRST_NAME, E.LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D. DEPARTMENT_ID;

SELECT COUNT(*)
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D. DEPARTMENT_ID;
--==>> 106

SELECT COUNT(*)
FROM EMPLOYEES;
--==>> 107

-- 1.방법
SELECT E.FIRST_NAME, E.LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D. DEPARTMENT_ID;

-- 2.방법

SELECT E.FIRST_NAME, E.LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
        JOIN JOBS J
        ON E.JOB_ID = J.JOB_ID;
        
        

--○ EMPLOYEES, DEPARTMENTS, JOBS, LOCATIONS, COUNTRIES, REGIONS 테이블을 대상으로
--   직원들의 데이터를 다음과 같이 조회한다.
--   FIRST_NAME, LAST_NAME, JOB_TITLE, DEPARTMENT_NAME, CITY
--   , COUNTRY_NAME, REGION,NAME


--  FIRST_NAME, LAST_NAME, JOB_TITLE, DEPARTMENT_NAME, CITY,      COUNTRY_NAME, REGION_NAME
    ---------------------  ---------- ---------------  -----      ------------- ------------
--  EMPLOYEES               JOB       DEPARTMENTS      LOCATIONS  COUNTRIES     REGIONS
--------------------------------------------------------------------------------
SELECT E.FIRST_NAME, E.LAST_NAME, J.JOB_TITLE, D.DEPARTMENT_NAME, L.CITY, C.COUNTRY_NAME, R.REGION_NAME
FROM JOBS J 
         JOIN EMPLOYEES E ON J.JOB_ID = E.JOB_ID
        LEFT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
        LEFT JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
        LEFT JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID
        LEFT JOIN REGIONS R ON C.REGION_ID = R.REGION_ID;
--------------------------------------------------------------------------------
--틀린거


SELECT E.FIRST_NAME, E.LAST_NAME, J.JOB_TITLE, D.DEPARTMENT_NAME, L.CITY, C.COUNTRY_NAME, R.REGION_NAME
FROM EMPLOYEES E
        LEFT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
        LEFT JOIN JOBS J ON J.JOB_ID = E.JOB_ID
        LEFT JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
        LEFT JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID
        LEFT JOIN REGIONS R ON C.REGION_ID = R.REGION_ID;








SELECT *
FROM JOBS;
--JOB_ID
SELECT *
FROM EMPLOYEES;
-- DEPARTMENT_ID 관계 컬럼
SELECT *
FROM DEPARTMENTS;
-- LOCATIONS_ID
SELECT *
FROM LOCATIONS; --부모
--COIUNTRY_ID 관계 컬럼
SELECT *
FROM COUNTRIES; --부모
--REGION_ID 관계 컬럼
SELECT *
FROM REGIONS; --부모